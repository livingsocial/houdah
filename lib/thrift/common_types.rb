#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#


module Hadoop
  module API
        # Generic I/O error
        class IOException < ::Thrift::Exception
          include ::Thrift::Struct, ::Thrift::Struct_Union
          MSG = 1
          STACK = 2
          CLAZZ = 3

          FIELDS = {
            # Error message.
            MSG => {:type => ::Thrift::Types::STRING, :name => 'msg'},
            # Textual representation of the call stack.
            STACK => {:type => ::Thrift::Types::STRING, :name => 'stack'},
            # The Java class of the Exception (may be a subclass)
            CLAZZ => {:type => ::Thrift::Types::STRING, :name => 'clazz'}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        # Information about the compilation version of this server
        class VersionInfo
          include ::Thrift::Struct, ::Thrift::Struct_Union
          VERSION = 1
          REVISION = 2
          COMPILEDATE = 4
          COMPILINGUSER = 5
          URL = 6
          BUILDVERSION = 7

          FIELDS = {
            VERSION => {:type => ::Thrift::Types::STRING, :name => 'version'},
            REVISION => {:type => ::Thrift::Types::STRING, :name => 'revision'},
            COMPILEDATE => {:type => ::Thrift::Types::STRING, :name => 'compileDate'},
            COMPILINGUSER => {:type => ::Thrift::Types::STRING, :name => 'compilingUser'},
            URL => {:type => ::Thrift::Types::STRING, :name => 'url'},
            BUILDVERSION => {:type => ::Thrift::Types::STRING, :name => 'buildVersion'}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        # A single stack frame in a stack dump
        class StackTraceElement
          include ::Thrift::Struct, ::Thrift::Struct_Union
          CLASSNAME = 1
          FILENAME = 2
          LINENUMBER = 3
          METHODNAME = 4
          ISNATIVEMETHOD = 5
          STRINGREPRESENTATION = 6

          FIELDS = {
            CLASSNAME => {:type => ::Thrift::Types::STRING, :name => 'className'},
            FILENAME => {:type => ::Thrift::Types::STRING, :name => 'fileName'},
            LINENUMBER => {:type => ::Thrift::Types::I32, :name => 'lineNumber'},
            METHODNAME => {:type => ::Thrift::Types::STRING, :name => 'methodName'},
            ISNATIVEMETHOD => {:type => ::Thrift::Types::BOOL, :name => 'isNativeMethod'},
            STRINGREPRESENTATION => {:type => ::Thrift::Types::STRING, :name => 'stringRepresentation'}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        # Info about a thread with its corresponding stack trace
        class ThreadStackTrace
          include ::Thrift::Struct, ::Thrift::Struct_Union
          THREADNAME = 1
          THREADSTRINGREPRESENTATION = 2
          ISDAEMON = 3
          STACKTRACE = 4

          FIELDS = {
            THREADNAME => {:type => ::Thrift::Types::STRING, :name => 'threadName'},
            THREADSTRINGREPRESENTATION => {:type => ::Thrift::Types::STRING, :name => 'threadStringRepresentation'},
            ISDAEMON => {:type => ::Thrift::Types::BOOL, :name => 'isDaemon'},
            STACKTRACE => {:type => ::Thrift::Types::LIST, :name => 'stackTrace', :element => {:type => ::Thrift::Types::STRUCT, :class => Hadoop::API::StackTraceElement}}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        # Memory available via java.lang.Runtime
        class RuntimeInfo
          include ::Thrift::Struct, ::Thrift::Struct_Union
          TOTALMEMORY = 1
          FREEMEMORY = 2
          MAXMEMORY = 3

          FIELDS = {
            TOTALMEMORY => {:type => ::Thrift::Types::I64, :name => 'totalMemory'},
            FREEMEMORY => {:type => ::Thrift::Types::I64, :name => 'freeMemory'},
            MAXMEMORY => {:type => ::Thrift::Types::I64, :name => 'maxMemory'}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        # Context options for every request.
        class RequestContext
          include ::Thrift::Struct, ::Thrift::Struct_Union
          CONFOPTIONS = 1

          FIELDS = {
            # This map turns into a Configuration object in the server and
            # is currently used to construct a UserGroupInformation to
            # authenticate this request.
            CONFOPTIONS => {:type => ::Thrift::Types::MAP, :name => 'confOptions', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class MetricsRecord
          include ::Thrift::Struct, ::Thrift::Struct_Union
          TAGS = 2
          METRICS = 3

          FIELDS = {
            TAGS => {:type => ::Thrift::Types::MAP, :name => 'tags', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}},
            METRICS => {:type => ::Thrift::Types::MAP, :name => 'metrics', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::I64}}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class MetricsContext
          include ::Thrift::Struct, ::Thrift::Struct_Union
          NAME = 1
          ISMONITORING = 2
          PERIOD = 3
          RECORDS = 4

          FIELDS = {
            NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
            ISMONITORING => {:type => ::Thrift::Types::BOOL, :name => 'isMonitoring'},
            PERIOD => {:type => ::Thrift::Types::I32, :name => 'period'},
            RECORDS => {:type => ::Thrift::Types::MAP, :name => 'records', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::LIST, :element => {:type => ::Thrift::Types::STRUCT, :class => Hadoop::API::MetricsRecord}}}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class ThriftDelegationToken
          include ::Thrift::Struct, ::Thrift::Struct_Union
          DELEGATIONTOKENBYTES = 1

          FIELDS = {
            DELEGATIONTOKENBYTES => {:type => ::Thrift::Types::STRING, :name => 'delegationTokenBytes', :binary => true}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

      end
    end
